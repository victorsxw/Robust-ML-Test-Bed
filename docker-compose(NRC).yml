version: '3'

services:
  mysql:
    image: victorsxw/robustai:mysql  # 使用已有镜像而不是构建
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: yorku2024
      MYSQL_DATABASE: attack
      LANG: C.UTF-8
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  flaskend:
    image: victorsxw/robustai:flaskend  # 使用已有镜像而不是构建
    container_name: flaskend
    ports:
      - "5000:5000"
    volumes:
      - ./Attack_Scripts:/tf/scripts
      - ./User_Models:/tf/models
      - ./Attack_Results:/tf/results
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - IS_DOCKER=true
      - PYTHONPATH=/app
      - TF_SCRIPTS_PATH=/tf/scripts
      - TF_MODELS_PATH=/tf/models
      - TF_RESULTS_PATH=/tf/results
      - FLASK_APP=main.py
      - FLASK_ENV=development
    depends_on:
      - mysql
    networks:
      - app-network

  web:
    image: victorsxw/robustai:website  # 使用已有镜像而不是构建
    container_name: website
    ports:
      - "3000:3000"
    volumes:
      - ./Attack_Results:/app/Attack_Results
      - ./Attack_Scripts:/app/Attack_Scripts
      - ./Test_Dataset:/app/Test_Dataset
      - ./Train_Dataset:/app/Train_Dataset
      - ./User_Models:/app/User_Models
    environment:
      - NODE_ENV=production
      - IS_DOCKER=true
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=yorku2024
      - DB_NAME=attack
      - FLASK_SERVICE_URL=http://flaskend:5000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
